{
  "openapi": "3.0.0",
  "info": {
    "description": "Check the Earth Conquest project routes here",
    "version": "1.0.0",
    "title": "earth-conquest-api"
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "tags": [
    {
      "name": "Game Request",
      "description": "Earth conquest API for requesting and returning game requests"
    }
  ],
  "paths": {
    "/games": {
            "post": {
        "tags": [
          "Create a Game"
        ],
        "summary": "Create a new game",
        "description": "Creates a game as NOT_STARTED, modifiers are set randomly on the 10x15 default board",
        "responses": {
          "201": {
            "description": "Game created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameSchema"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Games list"
        ],
        "summary": "Returns all active games",
        "responses": {
          "200": {
            "description": "All games retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameSchema"
                }
              }
            }
          }
        }
      }
    },
    "/games/{id}": {
      "get": {
        "tags": [
          "Game details"
        ],
        "summary": "Return a game by its id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "Game id"
          }
        ],
        "responses": {
          "200": {
            "description": "Game retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameSchema"
                }
              }
            }
          },
          "404": {
            "description": "Game not found"
          }
        }
      }
    },
    "/games/join/{id}": {
      "put": {
        "tags": [
          "Join to a Game"
        ],
        "summary": "Player joins a Game as blue or green player",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "Game id"
          },
          {
            "in": "query",
            "name": "team",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["BLUE", "GREEN"]
            }
          },
          {
            "in": "query",
            "name": "player_name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Player 'name' has joined to game as 'team' player"
          },
          "404": {
            "description": "Game not found"
          },
          "400": {
            "description": "team or name is already taken"
          }
        }
      }
    },
    "/games/start_game/{id}": {
      "put": {
        "tags": [
          "Start Game"
        ],
        "summary": "Start a game",
        "description": "Intial crew is launched (six aliens of each team on their respective areas). Set the game status in STARTED",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "Game id"
          }
        ],
        "responses": {
          "200": {
            "description": "Game started successfully"
          },
          "404": {
            "description": "Game not found"
          },
          "400": {
            "description": "can not start the game, some player is left or game status is not NOT_STARTED"
          }
        }
      }
    },
    "/games/next_state/{id}": {
      "put": {
        "tags": [
          "Next State"
        ],
        "summary": "Refresh and act Board",
        "description": "All aliens are moved to an adjacent cell, the game status is updated. Two seconds later the boards acts and the game status is updated if so required. After three next_states, one alien of each team is spawned on its respective area. Data is auto-uploaded to the sse function after refresh and act.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "Game id"
          }
        ],
        "responses": {
          "200": {
            "description": "New state has been updated successfully"
          },
          "404": {
            "description": "Game not found"
          },
          "400": {
            "description": "An error occurred updating the state"
          }
        }
      }
    },
    "/games/set_alterator/{id}": {
      "put": {
        "tags": [
          "Set Alterator"
        ],
        "summary": "Set an alterator on the board of a game",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "Game id"
          }
        ],
        "requestBody": {
          "description": "Alterator Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "alterator": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "enum": ["trap", "teleporter", "directioner"]
                      },
                      "positionInit": {
                        "type": "object",
                        "properties": {
                          "x": {
                            "type": "integer"
                          },
                          "y": {
                            "type": "integer"
                          }
                        }
                      },
                      "positionEnd": {
                        "type": "object",
                        "properties": {
                          "x": {
                            "type": "integer"
                          },
                          "y": {
                            "type": "integer"
                          }
                        }
                      },
                      "direction": {
                        "type": "string",
                        "enum": ["left", "right"]
                      }
                    }
                  },
                  "team": {
                    "type": "string",
                    "enum": ["BLUE", "GREEN"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Alterator setted successfully"
          },
          "404": {
            "description": "Game not found"
          },
          "400": {
            "description": "Not free position or team or alterator not valid"
          }
        }
      }
    },
    "/games/is_free_position/{id}": {
      "get": {
        "tags": ["Is free position"],
        "summary": "Returns true if a given position is not occupied and it's not an area",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "Game id"
          },
          {
            "in": "query",
            "name": "x",
            "required": true,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "y",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "succes: True if position is free, false in other case"
          },
          "404": {
            "description": "Game not found"
          }
        }
      }
    },
    "/games/sse/{id}": {
      "get": {
        "tags": [
          "Sse"
        ],
        "summary": "Returns game status where its updated",
        "description": "This route returns a function that checks everytime if the game status has changed. That's occurs on the methods: Start Game, Next State, Set Alterator. When Next State route it's executed, game status its updated with the aliens movement (refresh) and two seconds later, when the board acts.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "Game id"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "description": "Game not found"
          },
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameAlienSchema"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "GameSchema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "STARTED",
              "NOT_STARTED",
              "OVER"
            ]
          },
          "green_player": {
            "type": "string"
          },
          "blue_player": {
            "type": "string"
          },
          "board": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CellSchema"
              }
            }
          },
          "winner": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "team": {
                "type": "string",
                "enum": [
                  "BLUE",
                  "GREEN"
                ]
              }
            }
          },
          "alive_green_aliens": {
            "type": "integer"
          },
          "blue_green_aliens": {
            "type": "integer"
          }
        }
      },
      "GameAlienSchema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["STARTED", "NOT_STARTED", "OVER"]
          },
          "green_player": {
            "type": "string"
          },
          "blue_player": {
            "type": "string"
          },
          "board": {
            "type": "object",
            "properties": {
              "cells": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CellSchema"
                  }
                }
              },
              "blue_ovni_range": {
                "type": "object",
                "properties": {
                  "x": {
                    "type": "integer"
                  },
                  "y": {
                    "type": "integer"
                  }
                }
              },
              "green_ovni_range": {
                "type": "object",
                "properties": {
                  "x": {
                    "type": "integer"
                  },
                  "y": {
                    "type": "integer"
                  }
                }
              },
              "base_range_dimentions": {
                "type": "integer"
              }
            }
          },
          "winner": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "team": {
                "type": "string",
                "enum": ["BLUE", "GREEN"]
              }
            }
          },
          "alive_green_aliens": {
            "type": "integer"
          },
          "blue_green_aliens": {
            "type": "integer"
          }
        }
      },
      "BoardSchema": {
        "type": "object",
        "properties": {
          "board": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "object",
                "items": {
                  "$ref": "#/components/schemas/CellSchema"
                }
              }
            }
          },
          "cells": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "object",
                "items": {
                  "$ref": "#/components/schemas/CellSchema"
                }
              }
            }
          },
          "blue_ovni_range": {
            "type": "object",
            "properties": {
              "x": {
                "type": "integer"
              },
              "y": {
                "type": "integer"
              }
            }
          },
          "green_ovni_range": {
            "type": "object",
            "properties": {
              "x": {
                "type": "integer"
              },
              "y": {
                "type": "integer"
              }
            }
          },
          "base_range_dimentions": {
            "type": "integer"
          }
        }
      },
      "CellSchema": {
        "type": "object",
        "properties": {
          "aliens": {
            "type": "integer"
          },
          "modifier": {
            "type": "string",
            "enum": [
              "MOUNTAIN_RANGE",
              "KILLER",
              "MULTIPLIER"
            ]
          },
          "alterator": {
            "type": "object"
          }
        }
      },
      "AlienSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "eyes": {
            "type": "integer"
          },
          "team": {
            "type": "string",
            "enum": ["BLUE", "GREEN"]
          }
        }
      }
    }
  }
}